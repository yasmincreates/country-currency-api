name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test_password
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Wait for MySQL
      run: |
        for i in {1..30}; do
          if mysqladmin ping -h 127.0.0.1 -u root -ptest_password --silent; then
            echo "MySQL is up!"
            break
          fi
          echo "Waiting for MySQL..."
          sleep 2
        done

    - name: Create test environment file
      run: |
        cat > .env << EOF
        NODE_ENV=test
        PORT=3000
        DB_HOST=127.0.0.1
        DB_PORT=3306
        DB_NAME=test_db
        DB_USER=root
        DB_PASSWORD=test_password
        COUNTRIES_API_URL=https://restcountries.com/v2/all?fields=name,capital,region,population,flag,currencies
        EXCHANGE_RATE_API_URL=https://open.er-api.com/v6/latest/USD
        API_TIMEOUT=10000
        EOF

    - name: Run linter
      run: npm run lint
      continue-on-error: true

    - name: Run tests
      run: npm test

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
      continue-on-error: true

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: npm ci

    - name: Check for security vulnerabilities
      run: npm audit --audit-level=moderate
      continue-on-error: true

    - name: Build success
      run: echo "Build completed successfully!"